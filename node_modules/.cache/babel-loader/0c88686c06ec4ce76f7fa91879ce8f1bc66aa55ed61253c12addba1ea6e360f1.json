{"ast":null,"code":"var _jsxFileName = \"/Users/kfc/Desktop/detectest/src/Score.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport CropWorker from './cropWorker.worker.js';\nimport test from './images/test.jpg';\nimport { Canvas, createCanvas } from 'canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Score({\n  image,\n  jointData\n}) {\n  _s();\n  //original image and array of joints\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const cropImage = () => {\n    if (image && jointData) {\n      const testJoint = jointData.MCP[6];\n      console.log(\"cropImageif\");\n      console.log(image);\n      console.log(testJoint);\n      setLoading(true);\n      const cropWorker = new CropWorker('cropWorker.worker.js');\n      //const cropWorker = new CropWorker();\n      console.log(\"create new worker\");\n\n      // send data to worker\n      cropWorker.postMessage({\n        image,\n        jointData\n      });\n\n      // cropping\n\n      /* const img = document.getElementById(\"jointpic\");\n      const canvas = new createCanvas(img.width, img.height);\n      const ctx = canvas.getContext(\"2d\");\n       console.log(img.width, img.height);\n      console.log(canvas.width, canvas.height);\n       //const response = fetch(test);\n      //const blob = response.blob();\n      //const img = createImageBitmap(blob);\n      console.log('Image:', img);\n       console.log(img.width * testJoint.x, img.height * testJoint.y,\n          img.width * testJoint.width, img.height * testJoint.height,\n          0, 0, testJoint.width, testJoint.height);\n       const cropX = img.width * testJoint.x;\n      const cropY = img.height * testJoint.y;\n      const cropWidth = img.width * testJoint.width;\n      const cropHeight = img.height * testJoint.height\n       ctx.drawImage(\n          img, \n          cropX, cropY,\n          cropWidth, cropHeight,\n          0, 0, 10 * cropWidth, 10 * cropHeight\n      );\n       const cropped = canvas.toDataURL();\n       try {\n          setCroppedImage(cropped);\n          setLoading(false);\n      } catch (error) {\n          console.error('Error in cropping: ', error);\n          setLoading(false);\n      } */\n\n      cropWorker.onmessage = event => {\n        console.log(\"onmessage\");\n        const fileToBase64 = file => {\n          //converts uploaded image to base64\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n          });\n        };\n        const cropped = fileToBase64(event.data.croppedImage);\n        setCroppedImage(cropped);\n        setLoading(false);\n        cropWorker.terminate();\n        console.log(event.data.croppedImage);\n      };\n      cropWorker.onerror = error => {\n        console.error('Error in cropWorker: ', error);\n        setLoading(false);\n        cropWorker.terminate();\n      };\n    } else {\n      alert('Please upload an image first.');\n    }\n  };\n  async function sendToFingerApi(croppedImage) {\n    const url = 'https://sqbislam-rajointscoreprediction.hf.space/predict/fingers';\n    const formData = new FormData();\n    formData.append('file', croppedImage);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json'\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send file to API');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error during API call: ', error);\n      throw error;\n    }\n  }\n  async function sentToWristApi(croppedImage) {}\n  async function scoreJoints(image, jointDataArray) {\n    try {\n      const pipData = jointDataArray.PIP;\n      /*\n      const mcpData = jointDataArray.MCP;\n      const ulnaData = jointDataArray.Ulna;\n      const radiusData = jointDataArray.Wrist;\n      */\n\n      const cropPipPromises = pipData.map(pip => cropImage(image, pip));\n      const croppedPips = await Promise.all(cropPipPromises);\n      const apiPipPromises = croppedPips.map(croppedPip => sendToFingerApi(croppedPip));\n      const apiPipResponses = await Promise.all(apiPipPromises);\n      const results = [];\n      results.push(apiPipResponses);\n      return results;\n    } catch (error) {}\n  }\n  ;\n  const tableData = [{\n    id: 0,\n    Type: 'MCP',\n    Erosion: 0,\n    Narrowing: 5,\n    Total: 5\n  }, {\n    id: 1,\n    Type: 'MCP',\n    Erosion: 3,\n    Narrowing: 0,\n    Total: 3\n  }, {\n    id: 2,\n    Type: 'PIP',\n    Erosion: 4,\n    Narrowing: 4,\n    Total: 8\n  }, {\n    id: 3,\n    Type: 'PIP',\n    Erosion: 1,\n    Narrowing: 5,\n    Total: 6\n  }, {\n    id: 4,\n    Type: 'PIP',\n    Erosion: 2,\n    Narrowing: 2,\n    Total: 4\n  }, {\n    id: 5,\n    Type: 'Radius',\n    Erosion: 0,\n    Narrowing: 1,\n    Total: 1\n  }, {\n    id: 6,\n    Type: 'Ulna',\n    Erosion: 1,\n    Narrowing: 1,\n    Total: 2\n  }, {\n    id: 7,\n    Type: 'Wrist',\n    Erosion: 2,\n    Narrowing: 2,\n    Total: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cropImage,\n      children: 'Score joints'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: 'Clear Scores'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: croppedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Score Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '90%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f2f2f2'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Erosion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Narrowing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: row.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: row.Erosion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: row.Narrowing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: row.Total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(Score, \"GCmM0m+xub0fWtmmynUbZf+9VSU=\");\n_c = Score;\nexport default Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useState","CropWorker","test","Canvas","createCanvas","jsxDEV","_jsxDEV","Score","image","jointData","_s","croppedImage","setCroppedImage","loading","setLoading","cropImage","testJoint","MCP","console","log","cropWorker","postMessage","onmessage","event","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","cropped","data","terminate","alert","sendToFingerApi","url","formData","FormData","append","response","fetch","method","headers","body","ok","Error","json","sentToWristApi","scoreJoints","jointDataArray","pipData","PIP","cropPipPromises","map","pip","croppedPips","all","apiPipPromises","croppedPip","apiPipResponses","results","push","tableData","id","Type","Erosion","Narrowing","Total","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","style","width","borderCollapse","backgroundColor","border","padding","row","_c","$RefreshReg$"],"sources":["/Users/kfc/Desktop/detectest/src/Score.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport CropWorker from './cropWorker.worker.js';\nimport test from './images/test.jpg';\nimport { Canvas, createCanvas } from 'canvas';\n\n\nfunction Score({ image, jointData }){//original image and array of joints\n    const [croppedImage, setCroppedImage] = useState(null);  \n    const [loading, setLoading] = useState(false);  \n\n    const cropImage = () => {\n        if (image && jointData) {\n            const testJoint = jointData.MCP[6];\n            console.log(\"cropImageif\");\n            console.log(image);\n            console.log(testJoint);\n            setLoading(true);\n            const cropWorker = new CropWorker('cropWorker.worker.js');\n            //const cropWorker = new CropWorker();\n            console.log(\"create new worker\");\n\n            // send data to worker\n            cropWorker.postMessage({image, jointData});\n\n            // cropping\n            \n            /* const img = document.getElementById(\"jointpic\");\n            const canvas = new createCanvas(img.width, img.height);\n            const ctx = canvas.getContext(\"2d\");\n\n            console.log(img.width, img.height);\n            console.log(canvas.width, canvas.height);\n\n            //const response = fetch(test);\n            //const blob = response.blob();\n            //const img = createImageBitmap(blob);\n            console.log('Image:', img);\n\n            console.log(img.width * testJoint.x, img.height * testJoint.y,\n                img.width * testJoint.width, img.height * testJoint.height,\n                0, 0, testJoint.width, testJoint.height);\n\n            const cropX = img.width * testJoint.x;\n            const cropY = img.height * testJoint.y;\n            const cropWidth = img.width * testJoint.width;\n            const cropHeight = img.height * testJoint.height\n\n            ctx.drawImage(\n                img, \n                cropX, cropY,\n                cropWidth, cropHeight,\n                0, 0, 10 * cropWidth, 10 * cropHeight\n            );\n\n            const cropped = canvas.toDataURL();\n\n            try {\n                setCroppedImage(cropped);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error in cropping: ', error);\n                setLoading(false);\n            } */\n\n            cropWorker.onmessage = (event) => {\n                console.log(\"onmessage\");\n                const fileToBase64 = (file) => {//converts uploaded image to base64\n                    return new Promise((resolve, reject) => {\n                        const reader = new FileReader();\n                        reader.readAsDataURL(file);\n                        reader.onload = () => resolve(reader.result);\n                        reader.onerror = error => reject(error);\n                    });\n                };\n                const cropped = fileToBase64(event.data.croppedImage)\n                setCroppedImage(cropped);\n                setLoading(false);\n                cropWorker.terminate();\n                console.log(event.data.croppedImage);\n            };\n            cropWorker.onerror = (error) => {\n                console.error('Error in cropWorker: ', error);\n                setLoading(false);\n                cropWorker.terminate();\n            };\n        } else {\n            alert('Please upload an image first.');\n        }\n    };\n\n    async function sendToFingerApi(croppedImage){\n        const url = 'https://sqbislam-rajointscoreprediction.hf.space/predict/fingers';\n        const formData = new FormData();\n        formData.append('file',croppedImage);\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'accept' : 'application/json',\n                },\n                body: formData,\n            });\n            if (!response.ok){\n                throw new Error('Failed to send file to API');\n            }\n            const data = await response.json();\n            return data;\n\n        } catch(error){\n            console.error('Error during API call: ',error)\n            throw error;\n        }\n    }\n    async function sentToWristApi(croppedImage){\n\n    }\n\n    async function scoreJoints(image, jointDataArray){\n        try {\n            const pipData = jointDataArray.PIP;\n            /*\n            const mcpData = jointDataArray.MCP;\n            const ulnaData = jointDataArray.Ulna;\n            const radiusData = jointDataArray.Wrist;\n            */\n            \n            const cropPipPromises = pipData.map(pip => cropImage(image,pip));\n            \n            const croppedPips = await Promise.all(cropPipPromises);\n\n            const apiPipPromises = croppedPips.map(croppedPip => sendToFingerApi(croppedPip));\n\n            const apiPipResponses = await Promise.all(apiPipPromises);\n            \n            const results = [];\n            results.push(apiPipResponses);\n            return results;\n            \n        } catch (error) {\n\n        }\n    };\n\n    const tableData = [\n        {id: 0, Type: 'MCP', Erosion: 0, Narrowing: 5, Total: 5},\n        {id: 1, Type: 'MCP', Erosion: 3, Narrowing: 0, Total: 3},\n        {id: 2, Type: 'PIP', Erosion: 4, Narrowing: 4, Total: 8},\n        {id: 3, Type: 'PIP', Erosion: 1, Narrowing: 5, Total: 6},\n        {id: 4, Type: 'PIP', Erosion: 2, Narrowing: 2, Total: 4},\n        {id: 5, Type: 'Radius', Erosion: 0, Narrowing: 1, Total: 1},\n        {id: 6, Type: 'Ulna', Erosion: 1, Narrowing: 1, Total: 2},\n        {id: 7, Type: 'Wrist', Erosion: 2, Narrowing: 2, Total: 4},\n    ];\n\n    return (\n        <div>\n            <button onClick={cropImage}>\n                {'Score joints'}\n            </button>\n            <button>\n                {'Clear Scores'}\n            </button>\n            <div>\n                {loading && <p>Processing image...</p>}\n            </div>\n            <div>\n                <img src={croppedImage}></img>\n            </div>\n            <div>\n            <h2>Score Predictions</h2>\n      <table style={{ width: '90%', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr style={{ backgroundColor: '#f2f2f2' }}>\n            <th style={{ border: '1px solid #ddd', padding: '8px' }}>ID</th>\n            <th style={{ border: '1px solid #ddd', padding: '8px' }}>Type</th>\n            <th style={{ border: '1px solid #ddd', padding: '8px' }}>Erosion</th>\n            <th style={{ border: '1px solid #ddd', padding: '8px' }}>Narrowing</th>\n            <th style={{ border: '1px solid #ddd', padding: '8px' }}>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row) => (\n            <tr key={row.id}>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>{row.id}</td>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>{row.Type}</td>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>{row.Erosion}</td>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>{row.Narrowing}</td>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>{row.Total}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n            </div>\n        </div>\n    );\n}\n\nexport default Score;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}