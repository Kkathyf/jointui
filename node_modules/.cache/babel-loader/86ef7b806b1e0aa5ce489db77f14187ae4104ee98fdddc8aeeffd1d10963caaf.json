{"ast":null,"code":"var _jsxFileName = \"/Users/kfc/Desktop/detectest/src/UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport session_hash from './session_hash.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage({\n  onUpload,\n  onJointData\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n  const clearSelection = async () => {\n    setImage(null);\n    setError(null);\n    setProcessedImage(null);\n  };\n  const fileToBase64 = file => {\n    //converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n  const handleSubmit = async () => {\n    //submit button\n    if (!image) {\n      //if theres no image selected, return\n      setError('Please select an image.');\n      return;\n    }\n    setLoading(true); // Start loading spinner\n    try {\n      //session hash is hardcoded for now, will amend later\n      const base64ImageOriginal = await fileToBase64(image);\n\n      ////////////////////////////////////CHANGES//////////////////////////////////////////////\n      // 1. extract from the text file\n      let sessionHashLocal = \"session_hash\";\n      fetch(session_hash).then(res => res.text()).then(text => {\n        sessionHashLocal = text;\n      });\n\n      // 2. store session hash + apiurl as global variables\n      // const sessionHash = process.env.REACT_APP_JOINT_DETECTION_SESSION_HASH;\n      // const sessionApi = process.env.REACT_APP_JOINT_DETECTION_API;\n      const payload = {\n        \"fn_index\": 0,\n        \"data\": ['\"' + base64ImageOriginal + '\"'],\n        \"session_hash\": sessionHashLocal\n      }; // use local file method\n      ////////////////////////////////////CHANGES//////////////////////////////////////////////\n\n      const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/', payload, {\n        \"content-type\": \"application/json\"\n      });\n      if (response.status === 200) {\n        //api response, sets state variables\n        const {\n          data\n        } = response.data;\n        const time = response.duration;\n        const [imageInBase64, additionalInfo] = data;\n        setDuration(time);\n        setProcessedImage(imageInBase64);\n        onUpload(base64ImageOriginal);\n        onJointData(additionalInfo);\n      } else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    } finally {\n      setLoading(false); // Stop loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearSelection,\n          children: 'Clear Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }, this), processedImage && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Processed Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: processedImage,\n            className: \"processed-image\",\n            alt: \"Processed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"00FAaWA+mFO0taBHtYLsg3xpsUw=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","session_hash","jsxDEV","_jsxDEV","UploadImage","onUpload","onJointData","_s","image","setImage","error","setError","loading","setLoading","processedImage","setProcessedImage","duration","setDuration","handleImageChange","e","target","files","clearSelection","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleSubmit","base64ImageOriginal","sessionHashLocal","fetch","then","res","text","payload","response","post","status","data","time","imageInBase64","additionalInfo","console","children","className","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","src","alt","_c","$RefreshReg$"],"sources":["/Users/kfc/Desktop/detectest/src/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport session_hash from './session_hash.txt'\n\n\nfunction UploadImage({ onUpload, onJointData }) {\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processedImage, setProcessedImage] = useState(null); \n  const [duration, setDuration] = useState(null); \n\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n\n  const clearSelection = async () => {\n    setImage(null);\n    setError(null);\n    setProcessedImage(null);\n  }\n\n  const fileToBase64 = (file) => {//converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  const handleSubmit = async () => {//submit button\n    if (!image) {//if theres no image selected, return\n      setError('Please select an image.');\n      return;\n    }\n\n    setLoading(true); // Start loading spinner\n    try {\n        //session hash is hardcoded for now, will amend later\n        const base64ImageOriginal = await fileToBase64(image);\n        \n        ////////////////////////////////////CHANGES//////////////////////////////////////////////\n        // 1. extract from the text file\n        let sessionHashLocal = \"session_hash\";\n        fetch(session_hash)\n            .then(res => res.text())\n            .then(text => {\n              sessionHashLocal = text;\n            });\n\n        // 2. store session hash + apiurl as global variables\n        // const sessionHash = process.env.REACT_APP_JOINT_DETECTION_SESSION_HASH;\n        // const sessionApi = process.env.REACT_APP_JOINT_DETECTION_API;\n        const payload = {\"fn_index\":0,\"data\": ['\"'+base64ImageOriginal+'\"'],\"session_hash\": sessionHashLocal} // use local file method\n        ////////////////////////////////////CHANGES//////////////////////////////////////////////\n\n        const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/',\n        payload,\n          {\n            \"content-type\": \"application/json\"\n          }\n        );\n        if (response.status === 200) {//api response, sets state variables\n          const { data } = response.data;\n          const time = response.duration;\n          const [imageInBase64, additionalInfo] = data;\n          setDuration(time);\n          setProcessedImage(imageInBase64);\n          onUpload(base64ImageOriginal);\n          onJointData(additionalInfo); \n      } else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    } finally{\n      setLoading(false); // Stop loading spinner\n    }\n  };\n\n  return (\n    <div>\n      <div className='container'>\n        <div className='column'>\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n          <button onClick={handleSubmit} disabled={loading}>\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n          <button onClick={clearSelection}>\n            {'Clear Image'}\n          </button>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n          {loading && <div className=\"spinner\"></div>} \n          {processedImage && !loading && (\n            <div>\n              <h2>Processed Image:</h2>\n              <img src={processedImage} className='processed-image' alt=\"Processed\" />\n            </div>\n          )}\n        </div>\n      </div>\n      \n    </div>\n  );  \n}\n\nexport default UploadImage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}